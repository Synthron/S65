MEMORY {
  ZP:      start=$0000, size=$0100, type=rw;
  STACK:   start=$0100, size=$0100, type=rw;
  RAM:     start=$0200, size=$7D00, type=rw, file=""; 
  #############
  # RAM Banks #
  #############
  RAM00:   start=$8000, size=$3F00, type=rw, file="";
  RAM01:   start=$8000, size=$3F00, type=rw, file="";
  RAM02:   start=$8000, size=$3F00, type=rw, file="";
  RAM03:   start=$8000, size=$3F00, type=rw, file="";
  RAM04:   start=$8000, size=$3F00, type=rw, file="";
  RAM05:   start=$8000, size=$3F00, type=rw, file="";
  RAM06:   start=$8000, size=$3F00, type=rw, file="";
  RAM07:   start=$8000, size=$3F00, type=rw, file="";
  RAM08:   start=$8000, size=$3F00, type=rw, file="";
  RAM09:   start=$8000, size=$3F00, type=rw, file="";
  RAM10:   start=$8000, size=$3F00, type=rw, file="";
  RAM11:   start=$8000, size=$3F00, type=rw, file="";
  RAM12:   start=$8000, size=$3F00, type=rw, file="";
  RAM13:   start=$8000, size=$3F00, type=rw, file="";
  RAM14:   start=$8000, size=$3F00, type=rw, file="";
  RAM15:   start=$8000, size=$3F00, type=rw, file="";
  RAM16:   start=$8000, size=$3F00, type=rw, file="";
  RAM17:   start=$8000, size=$3F00, type=rw, file="";
  RAM18:   start=$8000, size=$3F00, type=rw, file="";
  RAM19:   start=$8000, size=$3F00, type=rw, file="";
  RAM20:   start=$8000, size=$3F00, type=rw, file="";
  RAM21:   start=$8000, size=$3F00, type=rw, file="";
  RAM22:   start=$8000, size=$3F00, type=rw, file="";
  RAM23:   start=$8000, size=$3F00, type=rw, file="";
  RAM24:   start=$8000, size=$3F00, type=rw, file="";
  RAM25:   start=$8000, size=$3F00, type=rw, file="";
  RAM26:   start=$8000, size=$3F00, type=rw, file="";
  RAM27:   start=$8000, size=$3F00, type=rw, file="";
  RAM28:   start=$8000, size=$3F00, type=rw, file="";
  RAM29:   start=$8000, size=$3F00, type=rw, file="";
  RAM30:   start=$8000, size=$3F00, type=rw, file="";
  RAM31:   start=$8000, size=$3F00, type=rw, file="";
  #############
  # IO Space  #
  #############
  TPI1:    start=$BF00, size=$0008, type=rw, define=yes, file=""; # Bank Select & IRQ Priority
  IDE1:    start=$BF08, size=$0008, type=rw, define=yes, file=""; # TPI IDE Interface
  LPT1:    start=$BF10, size=$0002, type=rw, define=yes, file=""; # LPT port
  LPT2:    start=$BF12, size=$0002, type=rw, define=yes, file=""; # LPT port
  VGA:     start=$BF14, size=$0003, type=rw, define=yes, file=""; # LPT port
  PIA:     start=$BF1C, size=$0004, type=rw, define=yes, file=""; # PIA LEDs and Ports
  VIA1:    start=$BF20, size=$0010, type=rw, define=yes, file=""; # VIA1 LCD and Comm IRQ
  VIA2:    start=$BF30, size=$0010, type=rw, define=yes, file=""; # VIA2 User Ports
  VIA3:    start=$BF40, size=$0010, type=rw, define=yes, file=""; # VIA3 User Ports
  ACIA1:   start=$BF50, size=$0004, type=rw, define=yes, file=""; # ACIA 1
  ACIA2:   start=$BF54, size=$0004, type=rw, define=yes, file=""; # ACIA 2
  ACIA3:   start=$BF58, size=$0004, type=rw, define=yes, file=""; # ACIA 3
  ACIA4:   start=$BF5C, size=$0010, type=rw, define=yes, file=""; # ACIA 4
  SID:     start=$BF60, size=$0020, type=rw, define=yes, file=""; # 8580 SID Chip
  IDE2:    start=$BF80, size=$0008, type=rw, define=yes, file=""; # Direct Interface IDE
  CFCARD:  start=$BF88, size=$0008, type=rw, define=yes, file=""; # CF-Card Interface
  RTC:     start=$BF90, size=$0010, type=rw, define=yes, file=""; # RTC Module
  #############
  # ROM Banks #
  #############
  ROM00:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM01:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM02:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM03:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM04:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM05:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM06:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM07:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM08:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM09:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM10:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM11:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM12:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM13:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM14:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM15:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM16:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM17:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM18:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM19:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM20:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM21:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM22:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM23:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM24:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM25:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM26:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM27:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM28:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM29:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM30:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  ROM31:   start=$C000, size=$4000, type=ro, fill=yes, fillval=$db, file=%O; # ROM Bank
  }

SEGMENTS {
  ZEROPAGE:    load=ZP,    type=ZP,  optional=yes;
  BANK0:       load=RAM00, type=bss, optional=yes;          # generic RAM space in banked area
  BSS:         load=RAM,   type=bss, optional=yes;          # general RAM space
  KERNEL_RAM:  load=ROM00, type=rw,  optional=yes, run=RAM; # link as general RAM Addresses
  KERNEL_ROM:  load=ROM00, type=ro,  optional=yes;          # Kernel Functions in ROM
  CODE:        load=ROM00, type=ro,  optional=yes;          # General Code Area
  ISRS:        load=ROM00, type=ro,  optional=yes;          # Interrupt Service Routines
  MONITOR:     load=ROM00, type=ro,  optional=yes;          # space for monitor program
  RODATA:      load=ROM00, type=ro,  optional=yes;          # Read-Only Data in ROM
  VECTORS:     load=ROM00, type=ro,  offset=$3FFA;          # Harware Vectors
  EHBASIC:     load=ROM01, type=ro,  optional=yes;          # ehBASIC ROM Page
}